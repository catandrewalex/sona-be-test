package mysql

import (
	"context"
	"database/sql"

	"sonamusica-backend/errs"
)

// WithTxWrappedError is an extension of the autogenerated SQLC's Queries, useful for wrapping database transaction (sql.Tx) with WrapMySQLError().
func (q *Queries) WithTxWrappedError(tx *sql.Tx) *Queries {
	queries := q.WithTx(tx)
	queries.db = DBTXWrappedError{tx}
	return queries
}

type DBTXWrappedError struct {
	DB DBTX
}

func (w DBTXWrappedError) ExecContext(ctx context.Context, sqlQuery string, params ...interface{}) (sql.Result, error) {
	result, err := w.DB.ExecContext(ctx, sqlQuery, params...)
	return result, errs.WrapMySQLError(err)
}
func (w DBTXWrappedError) PrepareContext(ctx context.Context, sqlQuery string) (*sql.Stmt, error) {
	result, err := w.DB.PrepareContext(ctx, sqlQuery)
	return result, errs.WrapMySQLError(err)

}
func (w DBTXWrappedError) QueryContext(ctx context.Context, sqlQuery string, params ...interface{}) (*sql.Rows, error) {
	result, err := w.DB.QueryContext(ctx, sqlQuery, params...)
	return result, errs.WrapMySQLError(err)

}
func (w DBTXWrappedError) QueryRowContext(ctx context.Context, sqlQuery string, params ...interface{}) *sql.Row {
	return w.DB.QueryRowContext(ctx, sqlQuery, params...)
}
